[
  {
    "code": ''
{
    print(456);
    return 123;
}
'',
    "syntaxOK": true,
    "returns": 123,
    "output": "456",
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  {
    "code": ''
{
    print(456);
    print("\n");
    return 123;
}
'',
    "syntaxOK": true,
    "returns": 123,
    "output": "456\n",
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  
  
  
  
  {
    "code": ''
{
    print("Hello, world!");
    return 123;
}
'',
    "syntaxOK": true,
    "returns": 123,
    "output": "Hello, world!",
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  
  
  
  
  
  {
    "code": ''
{
    print("Hello, \"world\"!");
    return 123;
}
'',
    "syntaxOK": true,
    "returns": 123,
    "output": "Hello, \"world\"!",
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  
  
  
   
  
  {
    "code": ''
{
    print("c:\\> format c:\\\nOK");
    return 123;
}
'',
    "syntaxOK": true,
    "returns": 123,
    "output": "c:\\> format c:\\\nOK",
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  
  
  
  
  {
    "code": ''
//A
{
    print("H");
    print("ell");
    print("o\nw");
    print("orld!");
    return 124;
}
'',
    "syntaxOK": true,
    "returns": 124,
    "output": "Hello\nworld!",
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  
  
  
  {
    "code": ''
//B
{
    print("H");
    print("ell");
    print("o\\nw");
    print("orld!");
    return 124;
}
'',
    "syntaxOK": true,
    "returns": 124,
    "output": "Hello\\nworld!",
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  
  
  
  {
    "code": ''
//B
{
    print("A\\\\\"B");
    return 124;
}
'',
    "syntaxOK": true,
    "returns": 124,
    "output": "A\\\\\"B",
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  
  
  
  {
    "code": ''
//B
{
    print("A\n\\n\\\n\\\\n\\\\\n\"\\\"\\\\\"\\\\\\\\\\\\\\B");
    return 124;
}
'',
    "syntaxOK": true,
    "returns": 124,
    "output": "A\n\\n\\\n\\\\n\\\\\n\"\\\"\\\\\"\\\\\\\\\\\\\\B",
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  
  
  
  {
    "code": ''
int fp;
{
    fp = open("blah");
    print("fp is ");
    print(fp);
    close(fp);
    return 23;
}
'',
    "syntaxOK": true,
    "returns": 23,
    "output": null,
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  {
    "code": ''

    int fp;
{
    fp = open("blah");
    print("fp is ");
    print(fp);
    close(fp);
    return 23;
}
'',
    "syntaxOK": true,
    "returns": 23,
    "output": null,
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  {
    "code": ''

int fp;
int value;
{
    fp = open("blah");
    write(fp, 40+2 );
    close(fp);
    fp = open("blah");
    value = read(fp);
    print("value is ");
    print(value);
    close(fp);
    return 0;
}
'',
    "syntaxOK": true,
    "returns": 0,
    "output": "value is 42",
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  {
    "code": ''

int fp;
int value;
{
    
    fp = open("blah");
    write(fp, 40+2 );
    close(fp);
    fp = open("blah");
    value = read(fp);
    print("value is ");
    print(value);
    close(fp);
    return 0;
}
'',
    "syntaxOK": true,
    "returns": 0,
    "output": "value is 42",
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  {
    "code": ''

int fp;
int value;
{
    fp = open("blah");
    write(fp, 40+2 );
    write(fp," hello");
    close(fp);
    fp = open("blah");
    value = read(fp);
    print("value is ");
    print(value);
    close(fp);
    return 0;
}
'',
    "syntaxOK": true,
    "returns": 0,
    "output": "value is 42",
    "outputfiles": [
      [
        "blah",
        "42 hello"
      ]
    ],
    "input": null,
    "bonus": false
  },
  
  
  
  {
    "code": ''

int fp1;
int fp2;
{
    fp1 = open("blah1");
    fp2 = open("blah2");
    write(fp1, "this is " );
    write(fp2, "flivve");
    write(fp1, "blah");
    write(fp2, "r");
    close(fp1);
    close(fp2);
    return 0;
}
'',
    "syntaxOK": true,
    "returns": 0,
    "output": null,
    "outputfiles": [
      [
        "blah1",
        "this is blah"
      ],
      [
        "blah2",
        "flivver"
      ]
    ],
    "input": null,
    "bonus": false
  },
  
  
  
  {
    "code": ''

int fp1;
string msg;
int four;
{
    msg = "ode to ";
    four = 4;
    fp1 = open("ode");
    write(fp1, msg );
    write(fp1, four);
    write(fp1, " grecian urn");
    close(fp1);
    return 0;
}
'',
    "syntaxOK": true,
    "returns": 0,
    "output": null,
    "outputfiles": [
      [
        "ode",
        "ode to 4 grecian urn"
      ],
      [
        "blah2",
        "flivver"
      ]
    ],
    "input": null,
    "bonus": false
  },
  
  
  
  
  
  
  
  
  
  {
    "code": ''

//returns failure
int fp;
{
    fp = open(42);
    return 0;
}
'',
    "syntaxOK": false,
    "returns": null,
    "output": null,
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  {
    "code": ''

{
    write("xyz","abc");
    return 0;
}
'',
    "syntaxOK": false,
    "returns": null,
    "output": null,
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  {
    "code": ''

{
    read("xyz");
    return 0;
}
'',
    "syntaxOK": false,
    "returns": null,
    "output": null,
    "outputfiles": [],
    "input": null,
    "bonus": false
  },
  
  
  
  
  {
    "code": ''

int n;
int total;
int i;
{
    n = input();
    total = 0;
    i=0;
    while( i <= n ){
        total = total + i;
        i = i + 1;
    }
    print("Total: ");
    print(total);
    print("\n");
    return 0;
}
'',
    "syntaxOK": true,
    "returns": 0,
    "output": "Total: 55\n",
    "outputfiles": [],
    "input": "10\n",
    "bonus": false
  },
  
  
  
  {
    "code": ''

{
    print("hello\\nthere");
}

'',
    "syntaxOK": true,
    "returns": 0,
    "output": "hello\\nthere",
    "outputfiles": [],
    "bonus": false
  },
  
  
  {
    "code": ''

string s;
{
    s = now();
    print("It is now ");
    print(s);
    print("...\n");
    return 0;
}

'',
    "syntaxOK": true,
    "returns": 0,
    "output": "It is now ${now}\n...\n",
    "outputfiles": [],
    "bonus": 1
  }
  
  
  
]

